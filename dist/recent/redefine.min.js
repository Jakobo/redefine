var require,define,redefine;(function(){function e(){function e(n){n=n||{};var t={let:function(n){return{be:function(t){return"string"==typeof t?r._.links[n]=t:r._.depends[n]=t,e({from:{exports:function(){return delete r._.links[n],r._.depends[n]=t,e()},redefine:function(){return delete r._.depends[n],r._.links[n]="function"==typeof t.toString?""+t:t+"",e()}}})}}}};for(var o in n)n.hasOwnProperty(o)&&(t[o]=n[o]);return t}var r=this;this.save={as:function(n){if(!t[u])throw Error("too many redefine() calls reached when trying to save "+n);return r._.meta=t[u],r._.id=n,u++,o[n]=r,e()}},this._={links:{},depends:{},meta:{},id:null,fn:{getExports:function(){if(i[r._.id])return i[r._.id];for(var e,n=r._.meta.factory,require=function(e){if(r._.depends[e])return r._.depends[e];if(r._.links[e])return o[r._.links[e]]._.fn.getExports();throw Error("unresolved dependency: "+e)},t={id:"#testmodule",uri:"http://example.com",exports:{}},u=[],s=r._.meta.depends,d=0,f=s.length;f>d;d++)switch(s[d]){case"require":u.push(require);break;case"module":u.push(t);break;case"exports":u.push(t.exports);break;default:u.push(require(s[d]))}return"function"==typeof n?(e=n.apply(t,u),e&&(t.exports=e)):"object"==typeof n&&(t.exports=n),i[r._.id]=t.exports,i[r._.id]}}}}var r=require,n=define,t=[],o={},i={},u=0;redefine=function(){return new e},redefine.reset=function(){u=0,i={},o={},t=[]},redefine.restore=function(){require=r,define=n},redefine.debug=function(){return{queue:t,map:o,exportsCache:i,count:u}},redefine.exports=function(e){if(u!==t.length)throw Error("redefine() calls do not match define() calls. Not proceeding, as unexpected things could occur");return o[e]._.fn.getExports()},define=function(){function e(e){return"[object Array]"===Object.prototype.toString.call(e)}for(var r=["require","exports","module"],n={},o=0,i=arguments.length;i>o;o++)if(e(arguments[o])){r=arguments[o];break}n=arguments[arguments.length-1],t.push({depends:r,factory:n})},define.amd={},require=function(){throw Error("global require should not be used. You should mock this using sinon or another mocking library")},redefine.version="__REDEFINE_VERSION__"})();